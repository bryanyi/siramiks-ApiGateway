server:
  port: 9090
  application:
    name: ApiGateway

spring:
  config:
    import:
      - optional:file:.env
  application:
    name: API-GATEWAY
  zipkin:
    base-url: ${ZIPKIN_SERVER_ADDRESS:http://localhost:9411}
  data:
    redis:
      host: ${REDIS_SERVER_HOST:localhost}
      port: 6379
  cloud:
    gateway:
      routes:
        - id: AUTH-SERVICE
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/v1/order/**
          # Api Gateway will filter the endpoint and make sure user is authenticated for each service
          filters:
            - GatewayAuthFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
#          filters:
#            - name: CircuitBreaker
#              args:
#                name: order-service-cb
#                fallbackUri: forward:/fallback/orderServiceFallback
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/v1/product/**
          filters:
            - GatewayAuthFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
#          filters:
#            - name: CircuitBreaker
#              args:
#                name: product-service-cb
#                fallbackUri: forward:/fallback/productServiceFallback
        - id: PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/api/v1/payment/**
          filters:
            - GatewayAuthFilter
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
#          filters:
#            - name: CircuitBreaker
#              args:
#                name: payment-service-cb
#                fallbackUri: forward:/fallback/paymentServiceFallback
eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: ${EUREKA_SERVER_ADDRESS:http://localhost:8761/eureka}

management:
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0